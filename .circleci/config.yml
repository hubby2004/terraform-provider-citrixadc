version: 2
jobs:
 build:
   working_directory: /home/circleci/.go_workspace/src/github.com/citrix/terraform-provider-citrixadc/tests
   machine:
      image: ubuntu-1604:201903-01
   environment:
      NETSCALER_VERSION: 12.0-56.20 
      TERRAFORM_VERSION: 0.12.20
   steps:
     - checkout:
         path: /home/circleci/.go_workspace/src/github.com/citrix/terraform-provider-citrixadc/

     - run:
         name: Golang update
         command: |
           curl https://dl.google.com/go/go1.14.1.linux-amd64.tar.gz -o /var/tmp/golang.tar.gz
           sudo rm -rf /usr/local/go
           sudo tar -C /usr/local -xzf /var/tmp/golang.tar.gz

     - run:
         name: Build
         command: |
           go version
           CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o terraform-provider-citrixadc ../main.go

     - run:
         name: Install Terraform
         command: |
           wget https://releases.hashicorp.com/terraform/$TERRAFORM_VERSION/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
           unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
           chmod a+x terraform

     - run:
        name: Prepare Netscaler
        command: |
           docker run --rm --name netscaler -p 80:80 --env EULA=yes --detach --cap-add=NET_ADMIN store/citrix/netscalercpx:$NETSCALER_VERSION
           sleep 30s
           docker exec netscaler /var/netscaler/bins/cli_script.sh "save ns conf"

     - run:
        name: Run tests
        command: |
           ./terraform init
           ./terraform apply -no-color -auto-approve
           docker exec netscaler /var/netscaler/bins/cli_script.sh "save ns conf"

     - run:
        name: Verify plan
        command: |
           ./terraform plan

     - run:
        name: Run acceptance tests
        command: |
           make -C .. fmt
           NS_URL="http://localhost" make -C .. testacc

     - run:
        name: Cleanup
        command: docker stop netscaler

